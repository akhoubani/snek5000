name: Tests

on:
  push:
    branches: [ main ]
    tags: ['*']
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 5
      matrix:
        python-version: [3.8, 3.9, "3.10"]

    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        submodules: recursive
        fetch-depth: 0

    - name: Install apt packages
      run: |
        sudo apt-get update
        sudo apt-get install gfortran libopenmpi-dev

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        cache: "pip"
        cache-dependency-path: "requirements/tests.txt"

    - name: Verify Python environment
      run: |
        pip list
        pip cache list
        pip check

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip nox

    - name: Run tests
      run: |
        nox --session tests-cov -- -v -s --runslow

    - name: Upload coverage to codecov
      if: ${{ success() }}
      uses: codecov/codecov-action@v2

  docs:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false

    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        submodules: recursive

    - name: Install apt packages
      run: |
        sudo apt-get update
        sudo apt-get install gfortran libopenmpi-dev

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.8
        cache: "pip"
        cache-dependency-path: "requirements/docs.txt"

    - name: Verify Python environment
      run: |
        pip list
        pip cache list
        pip check

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip nox

    - name: Build docs
      run: |
        nox --session docs -- -W

  deploy:
    needs: [docs, build]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false

    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Package
      run: |
        pip install build
        python -m build

    - name: Publish package
      if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        user: __token__
        password: ${{ secrets.TEST_PYPI_TOKEN }}
        repository_url: https://test.pypi.org/legacy/
        # password: ${{ secrets.PYPI_API_TOKEN }}
